<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.yedam.spring.board.mapper.BoardMapper">

	<!-- 전체조회 -->
	<!-- select : id와 resultType이 필요 -->
	<select id="selectBoardList" resultType="BoardVO">
		SELECT bno, title, contents, writer, regdate, updatedate, image
		FROM   board
		ORDER BY bno
	</select>
	
	<!-- 단건조회 : 조건 1) 글번호 2) 작가 두개로 검색할수있도록-->
	<select id="selectBoardInfo" resultType="BoardVO">
		SELECT bno, title, contents, writer, regdate, updatedate, image
		FROM   board
		<where>
		    <if test="writer != null and !writer.equals('')">
		    	<!-- 동일한 작가인데 자기가 쓴 글 조회하고싶을때 -->
	   			writer = #{writer} AND
	 		</if>
	 		<!-- 순서가 중요함 : 무조건 존재해야하는 값은 위치를 잘 생각해서 정해주기  -->
	 		<!-- bno는 무조건 있어야하는 값 -->
	 		<if test="bno > 0"> <!-- bno는 기본값이 0임 --> 
	   			bno = #{bno}
	 		</if>
 		</where>
	</select>
	
	<!-- 입력될 게시글 번호 조회 : 등록할 게시글 번호 값을 미리 보여줌 -->
	<!-- ★ 최초 등록할땐 max값이 null값임 따라서 null에 대해서 처리해주는 NVL을 항상 같이써줘야함 ★ -->
	<!-- as 별칭은 필수임 : 별칭이 없다면 BoardVO의 어디에 넣어야 할지 모름 -->
	<!-- ★ 카운트를 쓰거나 함수를 쓸때 따로 별칭을 써줘야함 => 그 별칭을 기준으로 클래스 필드명을 설정해주면됨 ★ -->
	<!-- 별칭 : JOIN할때나 서브쿼리 쓸때 두개의 VO중에 어디에 넣어야할지 구분할때 사용 -->
	<select id="getBoardNo" resultType="BoardVO">
		SELECT NVL(MAX(bno),0) + 1 as bno
		FROM   board
	</select>
	
	<!-- 등록 : 필수와 선택 구분 => 컬럼들의 조건을 기반으로해서 -->
	<!-- ★ insert할때의 콤마는 항상 앞에 있어야함 ★ -->
	<!-- insert에선 default값을 자동으로 넣어줌 / update는 자동으로 넣어주지 않아 직접 값을 넣어야함 -->
	<insert id="insertBoard" parameterType="BoardVO">
		INSERT INTO board(bno, title, contents, writer
						<if test="regdate != null"> <!-- Date 타입이라 null만 체크하면됨 -->
					    	,regdate
					  	</if>
					  	<!--  String 타입은 공백일때도 체크해줘야함 -->
					    <if test="image != null and !image.equals('')"> 
					    	,image
					  	</if>
					  	)
		VALUES(#{bno}, #{title}, #{contents}, #{writer}
				<if test="regdate != null"> <!-- Date 타입이라 null만 체크하면됨 -->
					, #{regdate}
			  	</if>
			  	<!--  String 타입은 공백일때도 체크해줘야함 -->
			    <if test="image != null and !image.equals('')"> 
			    	, #{image}
			  	</if>
			 )
	</insert>
	
	<!-- 수정 : 대상(제목, 내용, 이미지, 수정날짜) 수정날짜 입력을 받을수도 있고, 입력을 받지못할수도 있음 -->
	<!-- ★ set절에서는 다이나믹SQL이 남겨진 콤마(,)에 대해서 자동 처리를 해줌 / set절에서의 콤마는 항상 뒤에 있어야함 ★ -->
	<!-- 수정 날짜는 항상 들어가야하는 값 -->
	<!-- 1. 수정날짜에대해서 입력받을때 => 입력받은 값을 기반으로 등록 -->
	<!-- 2. 수정날짜를 입력하지않았을때 => 디폴트값이 그대로 들어가야함 
		=> update는 default값이 자동적으로 들어가지 않음 직접 값을 넣어줘야함 , 단 insert에선 default값이 자동적으로 들어감  -->
	<!-- 다이나믹SQL은 if 개념만 존재하므로 if만 2개를 적어주고 조건을 정반대로 작성하기 -->
	<update id="updateBoard" parameterType="BoardVO">
		UPDATE board
		<set>
			<if test="title != null and !title.equals('')">
				title = #{title},
			</if>
			<if test="contents != null and !contents.equals('')">
				contents = #{contents},
			</if>
			<if test="image != null and !image.equals('')">
				image = #{image},
			</if>
			<if test="updatedate != null">
				updatedate = #{updatedate}
			</if>
			<if test="updatedate == null">
				updatedate = sysdate
			</if>
		</set>
		WHERE bno = #{bno}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		DELETE
		FROM	board
		WHERE   bno = #{boardNo}
	</delete>

</mapper>